[["tabelas.html", "Capítulo 9 Tabelas 9.1 Pacotes necessários 9.2 Carregar os dados 9.3 Exploração ddos dados 9.4 Tabela de Frequência 9.5 Construção de uma tabela com o pacote gt 9.6 Tabelas com o pacote getsummary 9.7 Salvando a tabela", " Capítulo 9 Tabelas 9.1 Pacotes necessários carregue os bancos de dados que serão utilizados neste capítulo. pacman::p_load(readxl, dplyr, gmodels, gt, gtsummary, flextable) 9.2 Carregar os dados Para obter os dados você deve clicar aqui e baixar para o seu diretório de trabalho o arquivo dadosMater.xlsx. Crie um objeto mater para receber os dados, a partir do diretório de trabalho, executando o seguinte código: mater &lt;- read_excel (&quot;C:/Users/petro/Dropbox/Git_repositório/Arquivos/dadosMater.xlsx&quot;) 9.3 Exploração ddos dados 9.3.1 Visão Geral Uma visão geral do banco de dados pode ser conseguida com a função glimpse () do pacote dplyr: glimpse (mater) ## Rows: 1,368 ## Columns: 30 ## $ id &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1… ## $ idadeMae &lt;dbl&gt; 42, 29, 19, 31, 34, 29, 30, 34, 17, 32, 32, 31, 32, 19, 40, … ## $ altura &lt;dbl&gt; 1.65, 1.66, 1.72, 1.55, 1.60, 1.50, 1.54, 1.63, 1.68, 1.50, … ## $ peso &lt;dbl&gt; 69.9, 78.0, 81.0, 74.0, 60.0, 60.0, 75.5, 61.0, 57.0, 70.0, … ## $ ganhoPeso &lt;dbl&gt; 3.9, 16.5, 5.0, 43.0, 15.0, 11.4, 10.5, 9.0, 15.0, 11.4, 18.… ## $ anosEst &lt;dbl&gt; 3, 11, 9, 5, 7, 8, 4, 6, 10, 1, 4, 4, 18, 8, 2, 7, 3, 7, 11,… ## $ cor &lt;dbl&gt; 2, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, … ## $ eCivil &lt;dbl&gt; 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, … ## $ renda &lt;dbl&gt; 1.45, 2.41, 1.93, 1.45, 0.48, 0.96, 1.20, 2.41, 2.17, 0.72, … ## $ fumo &lt;dbl&gt; 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, … ## $ quantFumo &lt;dbl&gt; 0, 0, 0, 0, 0, 10, 20, 0, 0, 0, 0, 0, 0, 0, 5, 0, 10, 0, 0, … ## $ prenatal &lt;dbl&gt; 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, … ## $ para &lt;dbl&gt; 5, 0, 0, 1, 2, 1, 2, 1, 0, 4, 1, 4, 0, 1, 6, 0, 3, 0, 1, 1, … ## $ droga &lt;dbl&gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, … ## $ ig &lt;dbl&gt; 29, 33, 33, 33, 33, 33, 33, 33, 34, 34, 35, 35, 35, 35, 36, … ## $ tipoParto &lt;dbl&gt; 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, … ## $ pesoPla &lt;dbl&gt; 224, 1118, 452, 432, 574, 600, 632, 710, 600, 310, 690, 522,… ## $ sexo &lt;dbl&gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, … ## $ pesoRN &lt;dbl&gt; 1035, 2300, 1580, 1840, 2475, 1830, 1800, 2200, 2180, 1685, … ## $ compRN &lt;dbl&gt; 35.5, 45.0, 39.0, 41.0, 47.0, 41.0, 44.0, 44.0, 47.0, 48.0, … ## $ pcRN &lt;dbl&gt; 28, 32, 28, 32, 32, 29, 32, 32, 30, 27, 33, 32, 34, 34, 34, … ## $ apgar1 &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 5, 5… ## $ apgar5 &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 7, 8… ## $ utiNeo &lt;dbl&gt; 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, … ## $ obito &lt;dbl&gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, … ## $ hiv &lt;dbl&gt; 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, … ## $ sifilis &lt;dbl&gt; 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, … ## $ rubeola &lt;dbl&gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, … ## $ toxo &lt;dbl&gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, … ## $ infCong &lt;dbl&gt; 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, … Temos 30 variáveis (colunas) que podem ser manipuladas, reduzidas ou aumentadas, de acordo com o objetivo da análise. Essas variáveis estão todas colocadas como numéricas (dbl), quando, na realidade, várias delas são categóricas. 9.3.2 Transformações das variáveis A primeira tarefa é transformar algumas variáveis numéricas que se encontram como categóricas, usando a função factor (). mater$sexo &lt;- factor (mater$sexo, levels = c(1,2), labels = c (&quot;masc&quot;, &quot;fem&quot;)) mater$cor &lt;- factor (mater$cor, levels = c(1,2), labels = c (&quot;branca&quot;, &quot;não branca&quot;)) mater$tipoParto &lt;- factor (mater$tipoParto, levels = c(1,2), labels = c (&quot;normal&quot;, &quot;cesareo&quot;)) mater$utiNeo &lt;- factor (mater$utiNeo, levels = c (1, 2), labels = c (&quot;sim&quot;, &quot;não&quot;)) mater$eCivil &lt;- factor (mater$eCivil, levels = c (1, 2), labels = c (&quot;solteira&quot;, &quot;casada&quot;)) mater$fumo &lt;- factor (mater$fumo, levels = c (1, 2), labels = c (&quot;sim&quot;, &quot;não&quot;)) mater$obito &lt;- factor (mater$obito, levels = c (1, 2), labels = c (&quot;sim&quot;, &quot;não&quot;)) A seguir, vamos reduzir o número de variáveis, apenas como demostração didática, criando um novo banco de dados que será denominado de mater1. Isso será feito pela função select () do pacote `dplyr´. Como argumentos da dunção, colocamos o nome da variável precedido do sinal de menos. Poderia ser feito, colocando como argumentos o nome das variáveis que permanecem no banco de dados. mater1 &lt;- mater %&gt;% select (-quantFumo, -droga, -pcRN, -apgar5, -hiv, -sifilis, -rubeola, - toxo, -infCong) glimpse (mater1) ## Rows: 1,368 ## Columns: 21 ## $ id &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1… ## $ idadeMae &lt;dbl&gt; 42, 29, 19, 31, 34, 29, 30, 34, 17, 32, 32, 31, 32, 19, 40, … ## $ altura &lt;dbl&gt; 1.65, 1.66, 1.72, 1.55, 1.60, 1.50, 1.54, 1.63, 1.68, 1.50, … ## $ peso &lt;dbl&gt; 69.9, 78.0, 81.0, 74.0, 60.0, 60.0, 75.5, 61.0, 57.0, 70.0, … ## $ ganhoPeso &lt;dbl&gt; 3.9, 16.5, 5.0, 43.0, 15.0, 11.4, 10.5, 9.0, 15.0, 11.4, 18.… ## $ anosEst &lt;dbl&gt; 3, 11, 9, 5, 7, 8, 4, 6, 10, 1, 4, 4, 18, 8, 2, 7, 3, 7, 11,… ## $ cor &lt;fct&gt; não branca, branca, não branca, não branca, não branca, não … ## $ eCivil &lt;fct&gt; solteira, casada, solteira, casada, casada, casada, casada, … ## $ renda &lt;dbl&gt; 1.45, 2.41, 1.93, 1.45, 0.48, 0.96, 1.20, 2.41, 2.17, 0.72, … ## $ fumo &lt;fct&gt; não, não, não, não, não, sim, sim, não, não, não, não, não, … ## $ prenatal &lt;dbl&gt; 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, … ## $ para &lt;dbl&gt; 5, 0, 0, 1, 2, 1, 2, 1, 0, 4, 1, 4, 0, 1, 6, 0, 3, 0, 1, 1, … ## $ ig &lt;dbl&gt; 29, 33, 33, 33, 33, 33, 33, 33, 34, 34, 35, 35, 35, 35, 36, … ## $ tipoParto &lt;fct&gt; cesareo, cesareo, normal, normal, cesareo, normal, cesareo, … ## $ pesoPla &lt;dbl&gt; 224, 1118, 452, 432, 574, 600, 632, 710, 600, 310, 690, 522,… ## $ sexo &lt;fct&gt; fem, fem, fem, fem, fem, fem, fem, fem, fem, fem, fem, fem, … ## $ pesoRN &lt;dbl&gt; 1035, 2300, 1580, 1840, 2475, 1830, 1800, 2200, 2180, 1685, … ## $ compRN &lt;dbl&gt; 35.5, 45.0, 39.0, 41.0, 47.0, 41.0, 44.0, 44.0, 47.0, 48.0, … ## $ apgar1 &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 5, 5… ## $ utiNeo &lt;fct&gt; sim, não, sim, sim, sim, sim, não, não, sim, sim, não, sim, … ## $ obito &lt;fct&gt; não, não, não, não, não, não, não, não, não, não, não, não, … Agora, temos um banco de dados com 21 colunas, onde as variáveis categóricas aparecem como fatores. 9.4 Tabela de Frequência Uma das maneiras mais frequentes de observar o comportamento de uma variável, ou de um conjunto de variáveis, é construir uma tabela de frequência. A tabela de frequência agrupa os dados por categorias ou classes, contabilizando o número de ocorrências em cada categoria. 9.4.1 Tabela de frequência para dados categóricos A maneira mais simples é usar a função table () e prop.table () que fornecem a frequência absluta e a relativa, respectivamente, associada a ele, vamos usar a função round() para reduzir os digitos decimais a 3: tab1 &lt;- table(mater1$sexo) tab1 ## ## masc fem ## 731 637 round (prop.table(tab1),3) ## ## masc fem ## 0.534 0.466 Ou seja, o banco de dados mater1 representa os nascimentos de 731 (53,4%) meninos e 637 meninas (45,6%). Outro exemplo, tab2 &lt;- table(mater1$tipoParto) tab2 ## ## normal cesareo ## 813 555 round (prop.table(tab2), 3) ## ## normal cesareo ## 0.594 0.406 Observamos que o índice de cesarianas, nesta maternidade, é bem alto e igual a 40,6% dos nascimentos. 9.4.2 Tabela de contingência ou cruzada Por exemplo, o cruzamento de duas variáveis, chamada de tabela 2 x 2. Podemos usar também a função table () e prop.table (): tab3 &lt;- table(mater1$sexo, mater1$utiNeo) tab3 ## ## sim não ## masc 141 590 ## fem 134 503 round(prop.table(tab3), 3) ## ## sim não ## masc 0.103 0.431 ## fem 0.098 0.368 Existe uma função denominada CrossTable (), do pacote gmodels, bastante completa, que faz a tabulação cruzada com testes de independência para fatores. Necessita de vários argumentos: CrossTable(mater1$sexo, mater1$utiNeo, prop.r = TRUE, prop.c = FALSE, prop.t = FALSE, chisq = TRUE, prop.chisq = FALSE) ## ## ## Cell Contents ## |-------------------------| ## | N | ## | N / Row Total | ## |-------------------------| ## ## ## Total Observations in Table: 1368 ## ## ## | mater1$utiNeo ## mater1$sexo | sim | não | Row Total | ## -------------|-----------|-----------|-----------| ## masc | 141 | 590 | 731 | ## | 0.193 | 0.807 | 0.534 | ## -------------|-----------|-----------|-----------| ## fem | 134 | 503 | 637 | ## | 0.210 | 0.790 | 0.466 | ## -------------|-----------|-----------|-----------| ## Column Total | 275 | 1093 | 1368 | ## -------------|-----------|-----------|-----------| ## ## ## Statistics for All Table Factors ## ## ## Pearson&#39;s Chi-squared test ## ------------------------------------------------------------ ## Chi^2 = 0.6471502 d.f. = 1 p = 0.4211334 ## ## Pearson&#39;s Chi-squared test with Yates&#39; continuity correction ## ------------------------------------------------------------ ## Chi^2 = 0.5429235 d.f. = 1 p = 0.4612236 ## ## Onde prop.r = TRUE é para que a função entregue as proporções na linha. O argumento chisq = TRUE exibirá o resultado de um teste de Qui-Quadrado. Os argumentos prop.c (proporções na coluna), prop.t (proporçõe no total) e prop.chisq (contribuição do qui-quadrado de cada célula será incluída) foram colocados como FALSE. Os demais argumentos serão melhor discutidos quando do estudo do Qui-Quadrado. Para mais informações consulte a ajuda da função. O Qui-Quadrado de Pearson com correção mostrou um valor P=0,46, ou seja, maior que 0,05 e, portanto, não existe, estatisticamente, uma diferença entre os meninos e as meninas quanto à ida para UTI Neonatal. 9.4.3 Tabela de frequência para dados numéricos Quando se tem uma variável quantitativa, por exemplo, escolaridade (anosEst), fica difícil fazer uma distribuição como a feita anteriormente: table(mater1$anosEst) ## ## 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 ## 3 14 18 44 101 159 144 146 291 63 98 252 8 10 5 3 4 4 1 A saída deste comando tem interpretação difícil. O ideal é categorizarmos a variável anosEst de acordo com os níveis escolares oficiais: fundamental, medio e superior. Para isso, seguimos alguns passos: Passo 1: analisar a amplitude da variável range (mater1$anosEst) ## [1] 0 18 Passo 2: estabelecer a quantidade de categorias. Escolhemos 3 categorias: Fundamental, Médio e Superior Passo 3: criação da tabela com as categorias, usando a função cut (). Esta função tem vários argumentos: Argumento Significado x um vetor numérico que será convertido em fator por classes; breaks vetor numérico de dois ou mais pontos de corte exclusivos ou um único número (maior ou igual a 2) dando o número de intervalos nos quais x deve ser cortado; labels rotulos para os n´veis das categorias; include.lowest argumento lógico, sendo TRUE indicativo de inclusão dos limites; right argumento lógico, sendo o padrão igual a TRUE, indicando que os intervalos devem ser fechados à direita e aberto à esquerda ([)) ou se FALSE, abertos à direita e fechados à esquerda; ordered_result argummento lógico, TRUE se o resultado deve ser ordenado. Vamos estabelecer que até 9 anos de estudo, temos o ensino fundamental; de 10 a 12 anos, o ensino médio e a partir de 13 anos, o ensino superior. Ou seja, o argumento breaks = c(0, 10, 13, 18). No exemplo, foi usado right = FALSE e, em consequência, o intervalo 0 – 9, incluirá o 0 e excluirá o 9, o intervalo 9 a 12, incluirá o 9 e excluirá o 12 e o último intervalo incluirá o 12 e excluirá o 18, que é o valor mais alto. Em função disso, foi incluído mais um argumento include.lowest=TRUE, para incluir o valor 18. escolaridade &lt;- cut (mater1$anosEst, breaks= c (0,10,13,18), right = FALSE, labels = c(&quot;Fundamental&quot;, &quot;Médio&quot;, &quot;Superior&quot;), include.lowest = TRUE) table(escolaridade) ## escolaridade ## Fundamental Médio Superior ## 983 358 27 Quando se tem uma variável quantitativa e não se dispõe de um critério pré-estabelecido do número de classes, como no caso da escolaridade, devemos estabelecer um número de classes. O número adequado de categorias pode ser dado pela Regra de Sturges ou por um outro critério que tenha alguma lógica, de acordo com o objetivo do estudo. A regra de Sturges tem a seguinte fórmula, onde n é total de observações (casos). \\[ k = 1+1.322 \\ log_{10}(n) \\] O R possui a função nclass.Sturges() para este cálculo. Entretanto, ela é pouco usada. O bom-senso do pesquisador é a regra principal. Por exemplo, se quisermos ver a distribuição da renda familiar (em salários mínimos), variável renda no banco de dados mater1, podemos usar, os seguintes passos: Passo 1: analisar a amplitude da variável range (mater1$renda) ## [1] 0.19 10.84 Passo 2: estabelecer a quantidade de categorias. Como a renda mais alta é 11, vamos criar 5 classes. Passo 3: criação da tabela com as categorias, usando a função cut () e a função seq(), onde by = é o incremento da sequência. rendaCateg &lt;- cut (mater$renda, right = FALSE, include.lowest = TRUE, seq(0, 12, by = 3)) tab_renda &lt;- table(rendaCateg) tab_renda ## rendaCateg ## [0,3) [3,6) [6,9) [9,12] ## 1144 196 23 5 Este resultado mostra que 1144 dessas famílias tinham uma renda inferior a 3 salários mínimos e somente 5 famílias tinham uma renda acima de 9 salários mínimos. Ou seja, a distribuição da renda familiar é bastante assimétrica, com a maioria com uma renda abaixo de 3 salários mínimos. 9.5 Construção de uma tabela com o pacote gt Transformando a tab_renda, obtida anteriormente, usando a função as.data.frame (), temos: tab_renda &lt;- as.data.frame(tab_renda) class (tab_renda) ## [1] &quot;data.frame&quot; colnames(tab_renda) &lt;- c(&quot;Renda&quot;, &quot;Frequência&quot;) tab_renda ## Renda Frequência ## 1 [0,3) 1144 ## 2 [3,6) 196 ## 3 [6,9) 23 ## 4 [9,12] 5 Após, usa-se a função gt() para construir a tabela: gt_renda &lt;- gt(tab_renda) %&gt;% tab_header(title = md(&quot;**Renda Familiar**&quot;), subtitle = &quot;Salários Mínimos&quot;) gt_renda html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #hgukmypevh .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #hgukmypevh .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #hgukmypevh .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #hgukmypevh .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #hgukmypevh .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #hgukmypevh .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #hgukmypevh .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #hgukmypevh .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #hgukmypevh .gt_column_spanner_outer:first-child { padding-left: 0; } #hgukmypevh .gt_column_spanner_outer:last-child { padding-right: 0; } #hgukmypevh .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #hgukmypevh .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #hgukmypevh .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #hgukmypevh .gt_from_md > :first-child { margin-top: 0; } #hgukmypevh .gt_from_md > :last-child { margin-bottom: 0; } #hgukmypevh .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #hgukmypevh .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #hgukmypevh .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #hgukmypevh .gt_row_group_first td { border-top-width: 2px; } #hgukmypevh .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #hgukmypevh .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #hgukmypevh .gt_first_summary_row.thick { border-top-width: 2px; } #hgukmypevh .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #hgukmypevh .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #hgukmypevh .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #hgukmypevh .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #hgukmypevh .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #hgukmypevh .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #hgukmypevh .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #hgukmypevh .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #hgukmypevh .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #hgukmypevh .gt_left { text-align: left; } #hgukmypevh .gt_center { text-align: center; } #hgukmypevh .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #hgukmypevh .gt_font_normal { font-weight: normal; } #hgukmypevh .gt_font_bold { font-weight: bold; } #hgukmypevh .gt_font_italic { font-style: italic; } #hgukmypevh .gt_super { font-size: 65%; } #hgukmypevh .gt_two_val_uncert { display: inline-block; line-height: 1em; text-align: right; font-size: 60%; vertical-align: -0.25em; margin-left: 0.1em; } #hgukmypevh .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #hgukmypevh .gt_asterisk { font-size: 100%; vertical-align: 0; } #hgukmypevh .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #hgukmypevh .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #hgukmypevh .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } Renda Familiar Salários Mínimos Renda Frequência [0,3) 1144 [3,6) 196 [6,9) 23 [9,12] 5 9.6 Tabelas com o pacote getsummary Vamos construir uma tabela com as informações dos recém-nascidos do banco de dados mater. Inicialmente, criaremos um banco de dados, materRN, da seguinte modo: materRN &lt;- mater %&gt;% select(pesoRN, compRN, sexo, apgar1, ig, tipoParto, utiNeo, obito) glimpse (materRN) ## Rows: 1,368 ## Columns: 8 ## $ pesoRN &lt;dbl&gt; 1035, 2300, 1580, 1840, 2475, 1830, 1800, 2200, 2180, 1685, … ## $ compRN &lt;dbl&gt; 35.5, 45.0, 39.0, 41.0, 47.0, 41.0, 44.0, 44.0, 47.0, 48.0, … ## $ sexo &lt;fct&gt; fem, fem, fem, fem, fem, fem, fem, fem, fem, fem, fem, fem, … ## $ apgar1 &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 5, 5… ## $ ig &lt;dbl&gt; 29, 33, 33, 33, 33, 33, 33, 33, 34, 34, 35, 35, 35, 35, 36, … ## $ tipoParto &lt;fct&gt; cesareo, cesareo, normal, normal, cesareo, normal, cesareo, … ## $ utiNeo &lt;fct&gt; sim, não, sim, sim, sim, sim, não, não, sim, sim, não, sim, … ## $ obito &lt;fct&gt; não, não, não, não, não, não, não, não, não, não, não, não, … tab &lt;- materRN %&gt;% tbl_summary(by = sexo, label = list (pesoRN ~ &quot;Peso de Nascimento (g)&quot;, compRN ~ &quot;Comprimento ao nascer (cm)&quot;, apgar1 ~ &quot;Escore de Apgar no 1º min&quot;, ig ~ &quot;Idade Gestacional&quot;, tipoParto ~ &quot;Tipo de Parto&quot;, utiNeo ~ &quot;Necessidade de UTI&quot;, obito ~ &quot;Mortalidade&quot;), missing_text = &quot;Dados ausentes&quot;) %&gt;% bold_labels() %&gt;% modify_header(update = list(label ~ &quot;**Características**&quot;, stat_1 ~ &quot;**Masculino** (N = 731)&quot;, stat_2 ~ &quot;**Feminino** (N = 637)&quot;)) %&gt;% add_p(pvalue_fun = function(x) style_pvalue(x, digits = 3)) tab html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #kxnscgaxdu .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #kxnscgaxdu .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #kxnscgaxdu .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #kxnscgaxdu .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #kxnscgaxdu .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #kxnscgaxdu .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #kxnscgaxdu .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #kxnscgaxdu .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #kxnscgaxdu .gt_column_spanner_outer:first-child { padding-left: 0; } #kxnscgaxdu .gt_column_spanner_outer:last-child { padding-right: 0; } #kxnscgaxdu .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #kxnscgaxdu .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #kxnscgaxdu .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #kxnscgaxdu .gt_from_md > :first-child { margin-top: 0; } #kxnscgaxdu .gt_from_md > :last-child { margin-bottom: 0; } #kxnscgaxdu .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #kxnscgaxdu .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #kxnscgaxdu .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #kxnscgaxdu .gt_row_group_first td { border-top-width: 2px; } #kxnscgaxdu .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #kxnscgaxdu .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #kxnscgaxdu .gt_first_summary_row.thick { border-top-width: 2px; } #kxnscgaxdu .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #kxnscgaxdu .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #kxnscgaxdu .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #kxnscgaxdu .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #kxnscgaxdu .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #kxnscgaxdu .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #kxnscgaxdu .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #kxnscgaxdu .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #kxnscgaxdu .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #kxnscgaxdu .gt_left { text-align: left; } #kxnscgaxdu .gt_center { text-align: center; } #kxnscgaxdu .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #kxnscgaxdu .gt_font_normal { font-weight: normal; } #kxnscgaxdu .gt_font_bold { font-weight: bold; } #kxnscgaxdu .gt_font_italic { font-style: italic; } #kxnscgaxdu .gt_super { font-size: 65%; } #kxnscgaxdu .gt_two_val_uncert { display: inline-block; line-height: 1em; text-align: right; font-size: 60%; vertical-align: -0.25em; margin-left: 0.1em; } #kxnscgaxdu .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #kxnscgaxdu .gt_asterisk { font-size: 100%; vertical-align: 0; } #kxnscgaxdu .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #kxnscgaxdu .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #kxnscgaxdu .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } Características Masculino (N = 731)1 Feminino (N = 637)1 p-value2 Peso de Nascimento (g) 3,170 (2,800, 3,488) 2,990 (2,600, 3,355) Comprimento ao nascer (cm) 48.0 (46.0, 50.0) 47.0 (45.0, 49.0) Escore de Apgar no 1º min 8.00 (8.00, 9.00) 8.00 (8.00, 9.00) 0.300 Dados ausentes 89 97 Idade Gestacional 39.00 (37.00, 40.00) 39.00 (37.00, 40.00) 0.871 Tipo de Parto 0.111 normal 420 (57%) 393 (62%) cesareo 311 (43%) 244 (38%) Necessidade de UTI 0.421 sim 141 (19%) 134 (21%) não 590 (81%) 503 (79%) Mortalidade 0.319 sim 8 (1.1%) 11 (1.7%) não 723 (99%) 626 (98%) 1 Median (IQR); n (%) 2 Wilcoxon rank sum test; Pearson's Chi-squared test 9.7 Salvando a tabela library (flextable) tb &lt;- as_flex_table(tab) save_as_docx(tb, path = &quot;RN.docx&quot;) save_as_pptx(tb, path = &quot;RN.pptx&quot;) Para maiores esclarecimentos, consulte: https://statsandr.com/blog/descriptive-statistics-in-r/ http://www.danieldsjoberg.com/gtsummary/ "]]
